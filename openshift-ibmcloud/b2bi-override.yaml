global:
  image:
    repository: "image-registry.openshift-image-registry.svc:5000/sterling-b2bi-app/b2bi"
    tag: "6.1.0.0"
    pullPolicy: IfNotPresent
    # Get value  --> oc describe sa default
    pullSecret: "default-dockercfg-< CHANGE_HERE >"  
  
appResourcesPVC:
  name: sterling-b2bi-app-resources-pvc
  storageClassName: "ibmc-file-gold"
  selector:
    label: "intent"
    value: "resources"
  accessMode: ReadOnlyMany
  size: 500Mi

appLogsPVC:
  name: sterling-b2bi-app-logs-pvc
  storageClassName: "ibmc-file-gold"
  selector:
    label: "intent"
    value: "logs"
  accessMode: ReadWriteMany
  size: 1000Mi
  
appDocumentsPVC:
  enabled: true
  name: sterling-b2bi-app-documents-pvc
  storageClassName: "ibmc-file-gold"
  selector:
    label: "intent"
    value: "documents"
  accessMode: ReadWriteMany
  size: 1Gi

security:
  supplementalGroups: [65534]
  fsGroup: 1010
  runAsUser: 1010

dataSetup:
  # true for SETUP, false for RUNTIME
  enabled: false
  upgrade: false

env:
  tz: "UTC"
  license: "accept"
  upgradeCompatibilityVerified: false
  
logs:
  enableAppLogOnConsole: false
      
setupCfg:
  #Upgrade
  #upgrade: false
  basePort: 5000
  license: true
  licenseAcceptEnableSfg: true
  # true for SETUP, false for RUNTIME
  dbCreateSchema: false

  # Name of system passphrase secret if available
  systemPassphraseSecret: b2b-system-passphrase-secret
  enableFipsMode: false
  nistComplianceMode: "off"
  #updateJcePolicyFile: false
  #jcePolicyFile: local_policy.jar

  # Database Attributes --> "oc get svc -n sterling-b2bi-db2"
  dbVendor: db2
  dbHost: < CHANGE_HERE >          #  <EXTERNAL-IP>
  dbPort: 50000  
  dbData: B2BIDB
  dbDrivers: db2jcc4.jar
  dbSecret: b2b-db-secret

  # SMTP Attributes
  adminEmailAddress: siadmin@company.com
  smtpHost: mail.company.com
  
  #WMQ   --> "oc get svc -n sterling-b2bi-mq"
  #JMS properties are optional if jmsVendor is empty
  #To use IBMMQ for communication between ASI & AC, change property to jmsVendor: IBMMQ and provide other connection details
  jmsVendor: IBMMQ
  jmsConnectionFactory: com.ibm.mq.jms.MQQueueConnectionFactory
  jmsConnectionFactoryInstantiator:
  jmsQueueName: DEV.QUEUE.1
  jmsHost: < CHANGE_HERE >
  jmsPort: 1414
  jmsConnectionNameList: < CHANGE_HERE >(1414)
  jmsEnableSsl: false
  jmsChannel: DEV.APP.SVRCONN
  jmsSecret: b2b-jms-secret
  
  SANDBOX_LAUNCH_CLA2_SERVER: true
  SANDBOX_WEBAPP_PROTOCOL: https
  SANDBOX_WEBAPP_LIST_PORT: 5001

asi:
  replicaCount: 1
  
  ingress:
    internal:
      host: asi.company.com

  service:
    type: LoadBalancer
    ports:
      http: 
        name: http
        port: 35000
        targetPort: http
        nodePort: 30000
        protocol: TCP

    extraPorts:
      TCP1:
        name: asi-http-1
        port: 6443
        targetPort: 6443
        protocol: TCP
      TCP2:
        name: asi-sftp-1
        port: 6022
        targetPort: 6022
        protocol: TCP
    externalAccess:
      protocol: http
      # Get this value on IBM Cloud > Console > OpenShift > Cluster > <YOUR_CLUSTER> > Ingress Domain
      address: asi.< CHANGE_HERE Ingress subdomain>
      port: 80

             
ac:

  replicaCount: 1

  service:
    type: LoadBalancer
    ports:
      http: 
        name: http
        port: 35001
        targetPort: http
        nodePort: 30001
        protocol: TCP
    
    extraPorts:
      TCP1:
        name: ac-http-1
        port: 5443
        targetPort: 5443
        protocol: TCP
      TCP2:
        name: ac-sftp-1
        port: 5022
        targetPort: 5022
        protocol: TCP 

api:

  replicaCount: 1
  
  service:
    type: LoadBalancer
    ports:
      http:
        name: http
        port: 35002
        targetPort: http
        nodePort: 30002
        protocol: TCP
      https:
        name: https
        port: 35003
        targetPort: https
        nodePort: 30003
        protocol: TCP 
    externalAccess:
      protocol: http
      # Get this value on IBM Cloud > Console > OpenShift > Cluster > <YOUR_CLUSTER> > Ingress Domain
      address: api.< CHANGE_HERE Ingress subdomain>
      port: 80   

  ingress:
    internal:
      host: api.company.com

dashboard:
    enabled: true

purge:
  enabled: true
  image:
    repository: "image-registry.openshift-image-registry.svc:5000/sterling-b2bi-app/purge"
    tag: "6.1.0.0"
    pullPolicy: IfNotPresent
    # Get value  --> oc describe sa default
    pullSecret: "default-dockercfg-< CHANGE_HERE >"
  schedule: "*/30 * * * *"